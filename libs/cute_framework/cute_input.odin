package cute_framework

Key_Button :: enum {
	Unknown = 0,
	Return = 13,
	Escape = '\033',
	Backspace = '\b',
	Tab = '\t',
	Space = ' ',
	Exclaim = '!',
	Quote_Dbl = '"',
	Hash = '#',
	Percent = '%',
	Dollar = '$',
	Ampersand = '&',
	Quote = '\'',
	Left_Paren = '(',
	Right_Paren = ')',
	Asterisk = '*',
	Plus = '+',
	Comma = ',',
	Minus = '-',
	Period = '.',
	Slash = '/',
	Num_0 = '0',
	Num_1 = '1',
	Num_2 = '2',
	Num_3 = '3',
	Num_4 = '4',
	Num_5 = '5',
	Num_6 = '6',
	Num_7 = '7',
	Num_8 = '8',
	Num_9 = '9',
	Colon = ':',
	Semicolon = ';',
	Less = '<',
	Equals = '=',
	Greater = '>',
	Question = '?',
	At = '@',
	Left_Bracket = '[',
	Backslash = '\\',
	Right_Bracket = ']',
	Caret = '^',
	Underscore = '_',
	Backquote = '`',
	A = 'a',
	B = 'b',
	C = 'c',
	D = 'd',
	E = 'e',
	F = 'f',
	G = 'g',
	H = 'h',
	I = 'i',
	J = 'j',
	K = 'k',
	L = 'l',
	M = 'm',
	N = 'n',
	O = 'o',
	P = 'p',
	Q = 'q',
	R = 'r',
	S = 's',
	T = 't',
	U = 'u',
	V = 'v',
	W = 'w',
	X = 'x',
	Y = 'y',
	Z = 'z',
	Caps_Lock = 123,
	F1 = 124,
	F2 = 125,
	F3 = 126,
	F4 = 127,
	F5 = 128,
	F6 = 129,
	F7 = 130,
	F8 = 131,
	F9 = 132,
	F10 = 133,
	F11 = 134,
	F12 = 135,
	Print_Screen = 136,
	Scroll_Lock = 137,
	Pause = 138,
	Insert = 139,
	Home = 140,
	Page_Up = 141,
	Delete = 142,
	End = 143,
	Page_Down = 144,
	Right = 145,
	Left = 146,
	Down = 147,
	Up = 148,
	Num_Lock_Clear = 149,
	KP_Divide = 150,
	KP_Multiply = 151,
	KP_Minus = 152,
	KP_Plus = 153,
	KP_Enter = 154,
	KP_1 = 155,
	KP_2 = 156,
	KP_3 = 157,
	KP_4 = 158,
	KP_5 = 159,
	KP_6 = 160,
	KP_7 = 161,
	KP_8 = 162,
	KP_9 = 163,
	KP_0 = 164,
	KP_Period = 165,
	Application = 166,
	Power = 167,
	KP_Equals = 168,
	F13 = 169,
	F14 = 170,
	F15 = 171,
	F16 = 172,
	F17 = 173,
	F18 = 174,
	F19 = 175,
	F20 = 176,
	F21 = 177,
	F22 = 178,
	F23 = 179,
	F24 = 180,
	Help = 181,
	Menu = 182,
	Select = 183,
	Stop = 184,
	Again = 185,
	Undo = 186,
	Cut = 187,
	Copy = 188,
	Paste = 189,
	Find = 190,
	Mute = 191,
	Volume_Up = 192,
	Volume_Down = 193,
	KP_Comma = 194,
	KP_Equals_AS400 = 195,
	Alt_Erase = 196,
	Sys_Req = 197,
	Cancel = 198,
	Clear = 199,
	Prior = 200,
	Return_2 = 201,
	Separator = 202,
	Out = 203,
	Oper = 204,
	Clear_Again = 205,
	Cr_Sel = 206,
	Ex_Sel = 207,
	KP_00 = 208,
	KP_000 = 209,
	Thousands_Separator = 210,
	Decimal_Separator = 211,
	Currency_Unit = 212,
	Currency_Sub_Unit = 213,
	KP_Left_Paren = 214,
	KP_Right_Paren = 215,
	KP_Left_Brace = 216,
	KP_Right_Brace = 217,
	KP_Tab = 218,
	KP_Backspace = 219,
	KP_A = 220,
	KP_B = 221,
	KP_C = 222,
	KP_D = 223,
	KP_E = 224,
	KP_F = 225,
	KP_XOR = 226,
	KP_Power = 227,
	KP_Percent = 228,
	KP_Less = 229,
	KP_Greater = 230,
	KP_Ampersand = 231,
	KP_Dbl_Ampersand = 232,
	KP_Vertical_Bar = 233,
	KP_Dbl_Vertical_Bar = 234,
	KP_Colon = 235,
	KP_Hash = 236,
	KP_Space = 237,
	KP_At = 238,
	KP_Exclam = 239,
	KP_Mem_Store = 240,
	KP_Mem_Recall = 241,
	KP_Mem_Clear = 242,
	KP_Mem_Add = 243,
	KP_Mem_Subtract = 244,
	KP_Mem_Multiply = 245,
	KP_Mem_Divide = 246,
	KP_Plus_Minus = 247,
	KP_Clear = 248,
	KP_Clear_Entry = 249,
	KP_Binary = 250,
	KP_Octal = 251,
	KP_Decimal = 252,
	KP_Hexadecimal = 253,
	Left_Control = 254,
	Left_Shift = 255,
	Left_Alt = 256,
	Left_GUI = 257,
	Right_Control = 258,
	Right_Shift = 259,
	Right_Alt = 260,
	Right_GUI = 261,
	Mode = 262,
	Audio_Next = 263,
	Audio_Previous = 264,
	Audio_Stop = 265,
	Audio_Play = 266,
	Audio_Mute = 267,
	Media_Select = 268,
	WWW = 269,
	Mail = 270,
	Calculator = 271,
	Computer = 272,
	AC_Search = 273,
	AC_Home = 274,
	AC_Back = 275,
	AC_Forward = 276,
	AC_Stop = 277,
	AC_Refresh = 278,
	AC_Bookmarks = 279,
	Brightness_Down = 280,
	Brightness_Up = 281,
	Display_Switch = 282,
	KBD_Illum_Toggle = 283,
	KBD_Illum_Down = 284,
	KBD_Illum_Up = 285,
	Eject = 286,
	Sleep = 287,
	Any = 288,
	Count = 512,
}

Mouse_Button :: enum {
	Left,
	Right,
	Middle,
}

@(link_prefix = "cf_", default_calling_convention = "c")
foreign lib {
	key_down :: proc(key: Key_Button) -> bool ---
	key_just_pressed :: proc(key: Key_Button) -> bool ---
	mouse_x :: proc() -> f32 ---
	mouse_y :: proc() -> f32 ---
	mouse_down :: proc(button: Mouse_Button) -> bool ---
	mouse_just_pressed :: proc(button: Mouse_Button) -> bool ---
	mouse_wheel_motion :: proc() -> f32 ---
}

